{"version":3,"sources":["constants/index.js","components/Search/index.js","components/Button/index.js","components/Sort/index.js","components/Table/index.js","components/Preloader/index.js","App.js","reportWebVitals.js","index.js"],"names":["DEFAULT_QUERY","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_HPP","PARAM_PAGE","Search","this","input","focus","props","value","onChange","children","onSubmit","style","display","justifyContent","type","ref","node","React","Component","Button","onClick","className","defaultProps","Sort","sortKey","onSort","Table","list","onDismiss","isFetching","fetchStories","currentSearchTerm","page","sorts","isSortReverse","sortedList","reverseSortedList","reverse","marginTop","transition","transform","slice","map","item","width","href","url","title","author","num_comments","points","objectID","Preloader","textAlign","src","alt","SORTS","NONE","TITLE","sortBy","AUTHOR","COMMENTS","POINTS","App","_isMounted","needsToSearchTopStories","searchTerm","state","results","setSearchTopStories","result","hits","searchKey","oldHits","updatedHits","setState","id","filter","onSearchChange","e","target","fetchSearchTopStories","axios","then","data","catch","error","onSearchSubmit","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0RAAaA,EAAgB,QAChBC,EAAY,gCACZC,EAAc,UACdC,EAAe,SACfC,EAAY,iBACZC,EAAa,Q,OC8BXC,E,uKAhCb,WACMC,KAAKC,OACPD,KAAKC,MAAMC,U,oBAIf,WAAU,IAAD,OACP,EAKIF,KAAKG,MAJPC,EADF,EACEA,MACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,SAGF,OACE,sBAAMA,SAAUA,EAAhB,SACE,gCACE,kCAAQD,EAAR,OAA0B,uBAC1B,sBAAKE,MAAO,CAAEC,QAAS,OAAQC,eAAgB,iBAA/C,UACE,uBACEC,KAAK,OACLP,MAAOA,EACPC,SAAUA,EACVO,IAAK,SAAAC,GAAI,OAAI,EAAKZ,MAAQY,KAE5B,wBAAQF,KAAK,SAAb,gC,GA1BSG,IAAMC,WCCrBC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWZ,EAAvB,EAAuBA,SAAvB,OACb,wBACEW,QAASA,EACTC,UAAWA,EACXP,KAAK,SAHP,SAKGL,KAULU,EAAOG,aAAe,CACpBD,UAAW,IAGEF,QChBAI,EALF,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQhB,EAApB,EAAoBA,SAApB,OACX,sBAAME,MAAO,CAAE,OAAW,WAAYS,QAAS,kBAAMK,EAAOD,IAA5D,SACGf,KC+FUiB,EA9FD,SAAC,GAWR,IAVLC,EAUI,EAVJA,KACAC,EASI,EATJA,UACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,kBACAC,EAKI,EALJA,KACAR,EAII,EAJJA,QACAC,EAGI,EAHJA,OACAQ,EAEI,EAFJA,MACAC,EACI,EADJA,cAEMC,EAAaF,EAAMT,GAASG,GAC5BS,EAAoBF,EACtBC,EAAWE,UACXF,EAEJ,OACE,sBAAKxB,MAAO,CAAE2B,UAAW,OAAQC,WAAYV,EAAa,GAAK,gBAAiBW,UAAWX,EAAa,WAAa,YAArH,UACE,kCACE,gCACE,+BACE,6BACE,cAAC,EAAD,CACEL,QAAS,QACTC,OAAQA,EAFV,sEAOF,6BACE,cAAC,EAAD,CACED,QAAS,SACTC,OAAQA,EAFV,8CAOF,6BACE,cAAC,EAAD,CACED,QAAS,WACTC,OAAQA,EAFV,kFAOF,6BACE,cAAC,EAAD,CACED,QAAS,SACTC,OAAQA,EAFV,wCAOF,8CAGJ,gCACGW,EAAkBK,OAAO,IAAIC,KAAI,SAAAC,GAAI,OACpC,+BACE,oBAAIhC,MAAO,CAAEiC,MAAO,OAApB,SACE,mBAAGC,KAAMF,EAAKG,IAAd,SAAoBH,EAAKI,UAE3B,oBAAIpC,MAAO,CAAEiC,MAAO,OAApB,SAA8BD,EAAKK,SACnC,oBAAIrC,MAAO,CAAEiC,MAAO,OAApB,SAA8BD,EAAKM,eACnC,oBAAItC,MAAO,CAAEiC,MAAO,OAApB,SAA8BD,EAAKO,SACnC,oBAAIvC,MAAO,CAAEiC,MAAO,OAApB,SACE,cAAC,EAAD,CAAQxB,QAAS,kBAAMQ,EAAUe,EAAKQ,WAAtC,wEARKR,EAAKQ,kBAiBpB,cAAC,EAAD,CACE/B,QAAS,kBAAMU,EAAaC,EAAmBC,EAAO,IADxD,8BCzESoB,EANG,WAChB,OAAO,qBAAKzC,MAAO,CAAE0C,UAAW,UAAzB,SACL,qBAAKC,IAAI,yDAAyDC,IAAI,e,OCapEC,EAAQ,CACZC,KAAM,SAAA9B,GAAI,OAAIA,GACd+B,MAAO,SAAA/B,GAAI,OAAIgC,iBAAOhC,EAAM,UAC5BiC,OAAQ,SAAAjC,GAAI,OAAIgC,iBAAOhC,EAAM,WAC7BkC,SAAU,SAAAlC,GAAI,OAAIgC,iBAAOhC,EAAM,gBAAgBU,WAC/CyB,OAAQ,SAAAnC,GAAI,OAAIgC,iBAAOhC,EAAM,UAAUU,YA2J1B0B,E,kDArJb,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAHR0D,YAAa,EAEM,EAcnBC,wBAA0B,SAAAC,GACxB,OAAQ,EAAKC,MAAMC,QAAQF,IAfV,EAkBnBG,oBAAsB,SAAAC,GACpB,IAAQC,EAAeD,EAAfC,KAAMvC,EAASsC,EAATtC,KACd,EAA+B,EAAKmC,MAA5BK,EAAR,EAAQA,UAAWJ,EAAnB,EAAmBA,QAEbK,EAAUL,GAAWA,EAAQI,GAC/BJ,EAAQI,GAAWD,KACnB,GAEEG,EAAW,sBAAQD,GAAR,YAAqBF,IAEtC,EAAKI,SAAS,CACZP,QAAQ,2BACHA,GADE,kBAEJI,EAAY,CAAED,KAAMG,EAAa1C,UAEpCH,YAAY,KAjCG,EAqCnBD,UAAY,SAAAgD,GACV,MAA+B,EAAKT,MAA5BK,EAAR,EAAQA,UAAWJ,EAAnB,EAAmBA,QACnB,EAAuBA,EAAQI,GAAvBD,EAAR,EAAQA,KAAMvC,EAAd,EAAcA,KAGR0C,EAAcH,EAAKM,QADT,SAAAlC,GAAI,OAAIA,EAAKQ,WAAayB,KAG1C,EAAKD,SAAS,CACZP,QAAQ,2BACHA,GADE,kBAEJI,EAAY,CAAED,KAAMG,EAAa1C,aA/CrB,EAoDnB8C,eAAiB,SAAAC,GAAC,OAAI,EAAKJ,SAAS,CAAET,WAAYa,EAAEC,OAAOzE,SApDxC,EAsDnB0E,sBAAwB,SAACf,GAA0B,IAAdlC,EAAa,uDAAN,EAC1C,EAAK2C,SAAS,CAAE9C,YAAY,IAC5BqD,IAAM,GAAD,OAAIrF,EAAJ,YAAiBC,EAAjB,YAAgCC,GAAhC,OAA+CmE,EAA/C,YAA6DlE,EAA7D,YAA0EC,GAA1E,OAAuF+B,IACzFmD,MAAK,SAAAb,GACJ,EAAKN,YAAc,EAAKK,oBAAoBC,EAAOc,SAEpDC,OAAM,SAAAC,GAAK,OAAI,EAAKtB,YAAc,EAAKW,SAAS,CAAEW,QAAOzD,YAAY,QA5DvD,EA+DnB0D,eAAiB,SAAAR,GACf,IAAQb,EAAe,EAAKC,MAApBD,WACR,EAAKS,SAAS,CAAEH,UAAWN,IAEvB,EAAKD,wBAAwBC,IAC/B,EAAKe,sBAAsBf,GAG7B,EAAKS,SAAS,CAAET,WAAY,KAC5Ba,EAAES,kBAxEe,EA2EnB/D,OAAS,SAACD,GACR,IAAMU,EAAgB,EAAKiC,MAAM3C,UAAYA,IAAY,EAAK2C,MAAMjC,cACpE,EAAKyC,SAAS,CAAEnD,UAASU,mBA1EzB,EAAKiC,MAAQ,CACXC,QAAS,KACTI,UAAW,GACXN,WAAY,GACZrC,YAAY,EACZyD,MAAO,KACP9D,QAAS,OACTU,eAAe,GAVA,E,qDAgFnB,WACE/B,KAAK6D,YAAa,EAClB7D,KAAKwE,SAAS,CAAEH,UAAW5E,IAC3BO,KAAK8E,sBAAsBrF,K,kCAG7B,WACEO,KAAK6D,YAAa,I,oBAGpB,WACE,MAOI7D,KAAKgE,MANPD,EADF,EACEA,WACAE,EAFF,EAEEA,QACAI,EAHF,EAGEA,UACAc,EAJF,EAIEA,MACA9D,EALF,EAKEA,QACAU,EANF,EAMEA,cAGIF,EACJoC,GACAA,EAAQI,IACRJ,EAAQI,GAAWxC,MAChB,EAECL,EACJyC,GACAA,EAAQI,IACRJ,EAAQI,GAAWD,MAChB,GAIL,OACE,sBAAKlD,UAAU,MAAf,UACE,cAAC,EAAD,CACEd,MAAO2D,EACP1D,SAAUL,KAAK2E,eACfpE,SAAUP,KAAKoF,eAHjB,6BAQEpF,KAAKgE,MAAMtC,YAAc,cAAC,EAAD,IAE1BuC,GACG,cAAC,EAAD,CACEzC,KAAMA,EACNC,UAAWzB,KAAKyB,UAChBC,WAAY1B,KAAKgE,MAAMtC,WACvBC,aAAc3B,KAAK8E,sBACnBlD,kBAAmByC,EACnBxC,KAAMA,EACNR,QAASA,EACTC,OAAQtB,KAAKsB,OACbQ,MAAOuB,EACPtB,cAAeA,IAIpBoD,GACC,mBAAG3E,MAAO,CAAE0C,UAAW,UAAvB,iD,GAjJQnC,aCbHuE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAU1BX,M","file":"static/js/main.e6eac496.chunk.js","sourcesContent":["export const DEFAULT_QUERY = \"react\";\r\nexport const PATH_BASE = \"https://hn.algolia.com/api/v1\";\r\nexport const PATH_SEARCH = \"/search\";\r\nexport const PARAM_SEARCH = \"query=\";\r\nexport const PARAM_HPP = \"hitsPerPage=10\";\r\nexport const PARAM_PAGE = \"page=\";","import React from 'react';\r\n\r\nclass Search extends React.Component {\r\n  componentDidMount() {\r\n    if (this.input) {\r\n      this.input.focus();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      onChange,\r\n      children,\r\n      onSubmit\r\n    } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <label>{children}:</label><br />\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <input\r\n              type=\"text\"\r\n              value={value}\r\n              onChange={onChange}\r\n              ref={node => this.input = node}\r\n            />\r\n            <button type=\"submit\">Search</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default Search;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ onClick, className, children }) => (\r\n  <button\r\n    onClick={onClick}\r\n    className={className}\r\n    type=\"button\"\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nButton.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nconst Sort = ({ sortKey, onSort, children }) =>\r\n  <span style={{ \"cursor\" : \"pointer\"}} onClick={() => onSort(sortKey)}>\r\n    {children}\r\n  </span>\r\n\r\nexport default Sort;","import React from \"react\";\r\nimport Button from \"./../Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport Sort from \"./../Sort\";\r\n\r\nconst Table = ({\r\n  list,\r\n  onDismiss,\r\n  isFetching,\r\n  fetchStories,\r\n  currentSearchTerm,\r\n  page,\r\n  sortKey,\r\n  onSort,\r\n  sorts,\r\n  isSortReverse\r\n}) => {\r\n  const sortedList = sorts[sortKey](list);\r\n  const reverseSortedList = isSortReverse\r\n    ? sortedList.reverse()\r\n    : sortedList;\r\n\r\n  return (\r\n    <div style={{ marginTop: \"30px\", transition: isFetching ? \"\" : \"transform .3s\", transform: isFetching ? \"scale(0)\" : \"scale(1)\" }}>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <Sort\r\n                sortKey={'TITLE'}\r\n                onSort={onSort}\r\n              >\r\n                Заголовок\r\n              </Sort>\r\n            </th>\r\n            <th>\r\n              <Sort\r\n                sortKey={'AUTHOR'}\r\n                onSort={onSort}\r\n              >\r\n                Автор\r\n              </Sort>\r\n            </th>\r\n            <th>\r\n              <Sort\r\n                sortKey={'COMMENTS'}\r\n                onSort={onSort}\r\n              >\r\n                Комментарии\r\n              </Sort>\r\n            </th>\r\n            <th>\r\n              <Sort\r\n                sortKey={'POINTS'}\r\n                onSort={onSort}\r\n              >\r\n                Очки\r\n              </Sort>\r\n            </th>\r\n            <th>Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {reverseSortedList.slice(-10).map(item =>\r\n            <tr key={item.objectID}>\r\n              <td style={{ width: '20%' }}>\r\n                <a href={item.url}>{item.title}</a>\r\n              </td>\r\n              <td style={{ width: '40%' }}>{item.author}</td>\r\n              <td style={{ width: '10%' }}>{item.num_comments}</td>\r\n              <td style={{ width: '10%' }}>{item.points}</td>\r\n              <td style={{ width: '20%' }}>\r\n                <Button onClick={() => onDismiss(item.objectID)}>\r\n                  Отбросить\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      <Button\r\n        onClick={() => fetchStories(currentSearchTerm, page + 1)}\r\n      >\r\n        More Stories\r\n      </Button>\r\n    </div>\r\n  )\r\n};\r\n\r\nTable.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  onDismiss: PropTypes.func.isRequired,\r\n  isFetching: PropTypes.bool,\r\n  fetchStories: PropTypes.func,\r\n  currentSearchTerm: PropTypes.string,\r\n  page: PropTypes.number\r\n}\r\n\r\nexport default Table;","import React from \"react\";\r\n\r\nconst Preloader = () => {\r\n  return <div style={{ textAlign: \"center\" }}>\r\n    <img src=\"https://miro.medium.com/max/978/0*cWpsf9D3g346Va20.gif\" alt=\"loading\" />\r\n  </div>;\r\n}\r\n\r\nexport default Preloader;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport {\r\n  DEFAULT_QUERY,\r\n  PATH_BASE,\r\n  PATH_SEARCH,\r\n  PARAM_SEARCH,\r\n  PARAM_HPP,\r\n  PARAM_PAGE\r\n} from \"./constants\";\r\nimport Search from \"./components/Search\";\r\nimport Table from \"./components/Table\";\r\nimport Preloader from \"./components/Preloader\";\r\nimport Button  from \"./components/Button\";\r\nimport { sortBy } from 'lodash';\r\n\r\nconst SORTS = {\r\n  NONE: list => list,\r\n  TITLE: list => sortBy(list, 'title'),\r\n  AUTHOR: list => sortBy(list, 'author'),\r\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\r\n  POINTS: list => sortBy(list, 'points').reverse(),\r\n};\r\n\r\nclass App extends Component {\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: null,\r\n      searchKey: \"\",\r\n      searchTerm: \"\",\r\n      isFetching: false,\r\n      error: null,\r\n      sortKey: 'NONE',\r\n      isSortReverse: false\r\n    };\r\n  }\r\n\r\n  needsToSearchTopStories = searchTerm => {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setSearchTopStories = result => {\r\n    const { hits, page } = result;\r\n    const { searchKey, results } = this.state;\r\n\r\n    const oldHits = results && results[searchKey]\r\n      ? results[searchKey].hits\r\n      : [];\r\n\r\n    const updatedHits = [ ...oldHits,  ...hits ];\r\n    \r\n    this.setState({\r\n      results: { \r\n        ...results,\r\n        [searchKey]: { hits: updatedHits, page }\r\n      },\r\n      isFetching: false\r\n    });\r\n  }\r\n\r\n  onDismiss = id => {\r\n    const { searchKey, results } = this.state;\r\n    const { hits, page } = results[searchKey];\r\n\r\n    const isNotId = item => item.objectID !== id;\r\n    const updatedHits = hits.filter(isNotId);\r\n\r\n    this.setState({ \r\n      results: { \r\n        ...results,\r\n        [searchKey]: { hits: updatedHits, page }\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearchChange = e => this.setState({ searchTerm: e.target.value });\r\n\r\n  fetchSearchTopStories = (searchTerm, page = 0) => {\r\n    this.setState({ isFetching: true });\r\n    axios(`${PATH_BASE}/${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_HPP}&${PARAM_PAGE}${page}`)\r\n      .then(result => {\r\n        this._isMounted && this.setSearchTopStories(result.data);\r\n      })\r\n      .catch(error => this._isMounted && this.setState({ error, isFetching: false }));\r\n  }\r\n\r\n  onSearchSubmit = e => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n\r\n    if (this.needsToSearchTopStories(searchTerm)) {\r\n      this.fetchSearchTopStories(searchTerm);\r\n    }\r\n    \r\n    this.setState({ searchTerm: \"\" });\r\n    e.preventDefault();\r\n  }\r\n\r\n  onSort = (sortKey) => {\r\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({ sortKey, isSortReverse });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.setState({ searchKey: DEFAULT_QUERY });\r\n    this.fetchSearchTopStories(DEFAULT_QUERY);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      searchTerm, \r\n      results,\r\n      searchKey,\r\n      error,\r\n      sortKey,\r\n      isSortReverse\r\n    } = this.state;\r\n\r\n    const page = (\r\n      results && \r\n      results[searchKey] &&\r\n      results[searchKey].page\r\n    ) || 0;\r\n\r\n    const list = (\r\n      results &&\r\n      results[searchKey] &&\r\n      results[searchKey].hits\r\n    ) || [];\r\n\r\n    const currentSearchTerm = searchTerm ? searchTerm : DEFAULT_QUERY;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Search \r\n          value={searchTerm}\r\n          onChange={this.onSearchChange} \r\n          onSubmit={this.onSearchSubmit}\r\n        >\r\n          Search by title\r\n        </Search>\r\n\r\n        { this.state.isFetching && <Preloader /> }\r\n        \r\n        {results && \r\n            <Table \r\n              list={list}\r\n              onDismiss={this.onDismiss}\r\n              isFetching={this.state.isFetching}\r\n              fetchStories={this.fetchSearchTopStories}\r\n              currentSearchTerm={searchKey}\r\n              page={page}\r\n              sortKey={sortKey}\r\n              onSort={this.onSort}\r\n              sorts={SORTS}\r\n              isSortReverse={isSortReverse}\r\n            />\r\n        }\r\n\r\n        {error &&\r\n          <p style={{ textAlign: \"center\" }}>Sorry, something went wrong!</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nexport {\r\n  Button,\r\n  Search,\r\n  Table\r\n};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}