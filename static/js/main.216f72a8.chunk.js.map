{"version":3,"sources":["components/Search.jsx","components/Button.jsx","components/Table.jsx","components/Preloader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Search","value","onChange","children","onSubmit","type","Button","onClick","className","Table","list","onDismiss","isFetching","fetchStories","currentSearchTerm","page","style","marginTop","transition","transform","slice","map","item","width","href","url","title","author","num_comments","points","objectID","Preloader","textAlign","src","alt","DEFAULT_QUERY","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_HPP","PARAM_PAGE","App","props","needsToSearchTopStories","searchTerm","state","results","setSearchTopStories","result","hits","searchKey","oldHits","updatedHits","setState","id","filter","onSearchChange","e","target","fetchSearchTopStories","fetch","then","response","json","console","log","catch","error","onSearchSubmit","preventDefault","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.216f72a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Search = ({ \r\n  value, \r\n  onChange, \r\n  children, \r\n  onSubmit \r\n}) => (\r\n  <form onSubmit={onSubmit}>\r\n    <div>\r\n      <label>{children}:</label><br />\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n      <button type=\"submit\">Search</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst Button = ({ onClick, className = '', children }) => (\r\n  <button\r\n    onClick={onClick}\r\n    className={className}\r\n    type=\"button\"\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst Table = ({ \r\n  list, \r\n  onDismiss, \r\n  isFetching, \r\n  fetchStories, \r\n  currentSearchTerm, \r\n  page \r\n}) => (\r\n  <div style={{ marginTop: \"30px\", transition: isFetching ? \"\" : \"transform .3s\", transform: isFetching ? \"scale(0)\" : \"scale(1)\" }}>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Title</th>\r\n          <th>Author</th>\r\n          <th>Comments number</th>\r\n          <th>Points</th>\r\n          <th>Options</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {list.slice(-10).map(item =>\r\n          <tr key={item.objectID}>\r\n            <td style={{ width: '20%' }}>\r\n              <a href={item.url}>{item.title}</a>\r\n            </td>\r\n            <td style={{ width: '40%' }}>{item.author}</td>\r\n            <td style={{ width: '10%' }}>{item.num_comments}</td>\r\n            <td style={{ width: '10%' }}>{item.points}</td>\r\n            <td style={{ width: '20%' }}>\r\n              <Button onClick={() => onDismiss(item.objectID)}>\r\n                Отбросить\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n\r\n    <Button\r\n      onClick={() => fetchStories(currentSearchTerm, page + 1)}\r\n    >\r\n      More Stories\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nexport default Table;","import React from \"react\";\r\n\r\nconst Preloader = () => {\r\n  return <div style={{ textAlign: \"center\" }}>\r\n    <img src=\"https://miro.medium.com/max/978/0*cWpsf9D3g346Va20.gif\" alt=\"loading\" />\r\n  </div>;\r\n}\r\n\r\nexport default Preloader;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Search from './components/Search';\r\nimport Table from './components/Table';\r\nimport Preloader from \"./components/Preloader\";\r\n\r\nconst DEFAULT_QUERY = 'react';\r\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\r\nconst PATH_SEARCH = '/search';\r\nconst PARAM_SEARCH = 'query=';\r\nconst PARAM_HPP = \"hitsPerPage=10\";\r\nconst PARAM_PAGE = \"page=\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: null,\r\n      searchKey: \"\",\r\n      searchTerm: \"\",\r\n      isFetching: false\r\n    };\r\n  }\r\n\r\n  needsToSearchTopStories = searchTerm => {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setSearchTopStories = result => {\r\n    const { hits, page } = result;\r\n    const { searchKey, results } = this.state;\r\n\r\n    const oldHits = results && results[searchKey]\r\n      ? results[searchKey].hits\r\n      : [];\r\n\r\n    const updatedHits = [ ...oldHits,  ...hits ];\r\n    \r\n    this.setState({\r\n      results: { \r\n        ...results,\r\n        [searchKey]: { hits: updatedHits, page }\r\n      }\r\n    });\r\n  }\r\n\r\n  onDismiss = id => {\r\n    const { searchKey, results } = this.state;\r\n    const { hits, page } = results[searchKey];\r\n\r\n    const isNotId = item => item.objectID !== id;\r\n    const updatedHits = hits.filter(isNotId);\r\n\r\n    this.setState({ \r\n      results: { \r\n        ...results,\r\n        [searchKey]: { hits: updatedHits, page }\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearchChange = e => this.setState({ searchTerm: e.target.value });\r\n\r\n  fetchSearchTopStories = (searchTerm, page = 0) => {\r\n    this.setState({ isFetching: true });\r\n    fetch(`${PATH_BASE}/${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_HPP}&${PARAM_PAGE}${page}`)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.setSearchTopStories(result);\r\n        this.setState({ isFetching: false });\r\n        console.log(result)\r\n      })\r\n      .catch(error => error);\r\n  }\r\n\r\n  onSearchSubmit = e => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n\r\n    if (this.needsToSearchTopStories(searchTerm)) {\r\n      this.fetchSearchTopStories(searchTerm);\r\n    }\r\n    \r\n    this.setState({ searchTerm: \"\" });\r\n    e.preventDefault();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ searchKey: DEFAULT_QUERY });\r\n    this.fetchSearchTopStories(DEFAULT_QUERY);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      searchTerm, \r\n      results,\r\n      searchKey\r\n    } = this.state;\r\n\r\n    const page = (\r\n      results && \r\n      results[searchKey] &&\r\n      results[searchKey].page\r\n    ) || 0;\r\n\r\n    const list = (\r\n      results &&\r\n      results[searchKey] &&\r\n      results[searchKey].hits\r\n    ) || [];\r\n\r\n    const currentSearchTerm = searchTerm ? searchTerm : DEFAULT_QUERY;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Search \r\n          value={searchTerm}\r\n          onChange={this.onSearchChange} \r\n          onSubmit={this.onSearchSubmit}\r\n        >\r\n          Search by title\r\n        </Search>\r\n\r\n        { this.state.isFetching && <Preloader /> }\r\n        \r\n        {results && \r\n            <Table \r\n              list={list}\r\n              onDismiss={this.onDismiss}\r\n              isFetching={this.state.isFetching}\r\n              fetchStories={this.fetchSearchTopStories}\r\n              currentSearchTerm={searchKey}\r\n              page={page}\r\n            />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}